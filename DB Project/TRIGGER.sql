SET SERVEROUTPUT ON;
CREATE OR REPLACE TRIGGER MY_MANIPULATION
BEFORE INSERT OR DELETE OR UPDATE ON PROFILE
FOR EACH ROW
	--ENABLE
	DECLARE
		CURRENT_USERNAME VARCHAR(50);
	BEGIN
		SELECT USER INTO CURRENT_USERNAME FROM DUAL;
		IF INSERTING THEN
			DBMS_OUTPUT.PUT_LINE('ONE LINE INSERTED BY ' || CURRENT_USERNAME);
		ELSIF DELETING THEN
			DBMS_OUTPUT.PUT_LINE('ONE LINE DELETED BY ' || CURRENT_USERNAME);
		ELSIF UPDATING THEN
			DBMS_OUTPUT.PUT_LINE('ONE LINE UPDATED BY ' || CURRENT_USERNAME);
		END IF;
	END;
	/
CREATE OR REPLACE TRIGGER AUDIT_TABLE
BEFORE INSERT OR DELETE OR UPDATE ON PROFILE
FOR EACH ROW
	DECLARE
		V_USER VARCHAR(50);
		V_DATE VARCHAR(50);
	BEGIN
		SELECT USER, TO_CHAR(SYSDATE, 'DD/MON/YYYY HH24:MI:SS') INTO V_USER, V_DATE FROM DUAL;
		IF INSERTING THEN
			INSERT INTO PAUDIT VALUES(:NEW.ROLL, NULL, V_USER, V_DATE, 'INSERT');
		ELSIF DELETING THEN
			INSERT INTO PAUDIT VALUES(NULL, :OLD.ROLL, V_USER, V_DATE, 'DELETE');
		ELSIF UPDATING THEN
			INSERT INTO PAUDIT VALUES(:OLD.ROLL, :NEW.ROLL, V_USER, V_DATE, 'UPDATE');
		END IF;
	END;
	/
CREATE OR REPLACE TRIGGER PRO_BACKUP
BEFORE INSERT OR DELETE OR UPDATE ON PROFILE
FOR EACH ROW
	BEGIN
		IF INSERTING THEN
			INSERT INTO PROFILE_BACKUP VALUES(:NEW.ROLL, :NEW.FIRST_NAME, :NEW.LAST_NAME, :NEW.ADDRESS, :NEW.CONTACT_NO, :NEW.EMAIL, :NEW.WEBSITE);
		ELSIF UPDATING THEN
			UPDATE PROFILE_BACKUP
			SET ROLL = :NEW.ROLL, FIRST_NAME = :NEW.FIRST_NAME, LAST_NAME = :NEW.LAST_NAME, ADDRESS = :NEW.ADDRESS, CONTACT_NO = :NEW.CONTACT_NO, WEBSITE = :NEW.WEBSITE WHERE ROLL = :OLD.ROLL;
		ELSIF DELETING THEN
			DELETE FROM PROFILE_BACKUP WHERE ROLL = :OLD.ROLL;
		END IF;
	END;
	/
CREATE OR REPLACE TRIGGER REAL_TRIGGER1
INSTEAD OF INSERT ON REALITY
FOR EACH ROW
	BEGIN
		INSERT INTO PROFILE(ROLL) VALUES(:NEW.ROLL);
		INSERT INTO STUDENT(CGPA, SPECIALITY) VALUES(:NEW.CGPA, :NEW.SPECIALITY);
		INSERT INTO DEGREE(COUNTRY) VALUES(:NEW.COUNTRY);
	        INSERT INTO PROFESSION(JOB_TITLE, SALARY) VALUES(:NEW.JOB_TITLE, :NEW.SALARY);
END;	
/
CREATE OR REPLACE TRIGGER REAL_TRIGGER2
INSTEAD OF DELETE ON REALITY
FOR EACH ROW
	BEGIN
		DELETE FROM PROFILE WHERE ROLL = :OLD.ROLL;
		DELETE FROM STUDENT WHERE CGPA = :OLD.CGPA;
		DELETE FROM STUDENT WHERE SPECIALITY = :OLD.SPECIALITY;
		DELETE FROM DEGREE WHERE COUNTRY = :OLD.COUNTRY;
		DELETE FROM PROFESSION WHERE JOB_TITLE = :OLD.JOB_TITLE;
		DELETE FROM PROFESSION WHERE SALARY = :OLD.SALARY;
	END;
	/
CREATE OR REPLACE TRIGGER REALITY_UPDATE
INSTEAD OF UPDATE ON REALITY
FOR EACH ROW
	BEGIN
		UPDATE PROFILE SET ROLL = :NEW.ROLL WHERE ROLL = :OLD.ROLL;
		UPDATE STUDENT SET CGPA = :NEW.CGPA WHERE CGPA = :OLD.CGPA;
		UPDATE STUDENT SET SPECIALITY = :NEW.SPECIALITY WHERE SPECIALITY = :OLD.SPECIALITY;
		UPDATE DEGREE SET COUNTRY = :NEW.COUNTRY WHERE COUNTRY = :OLD.COUNTRY;
		UPDATE PROFESSION SET JOB_TITLE = :NEW.JOB_TITLE WHERE JOB_TITLE = :OLD.JOB_TITLE;
		UPDATE PROFESSION SET SALARY = :NEW.SALARY WHERE SALARY = :OLD.SALARY;
	END;
	/
